{"version":3,"sources":["../../../source/test/command/migrate-process.js"],"names":["Configuration","FileSystem","ForkedProcess","Path","Require","_createRequire","import","meta","url","MigrateProcess","constructor","parameter","option","resolve","path","ensureDirSync","dirname","writeTo","_defaultParameter","merge","whenExit","Promise","onExit","on","code","off"],"mappings":"yDAAA,SAASA,aAAT,QAA8B,wCAA9B;AACA,SAASC,UAAT,QAA2B,sCAA3B;AACA,SAASC,aAAT,QAA8B,iCAA9B;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,OAAO,GALbC,cAAc,CAACC,MAAM,CAACC,IAAP,CAAYC,GAAb,CAKd;;AAEA,MAAMC,cAAN,SAA6BP,aAA7B,CAA2C;;AAEzCQ,EAAAA,WAAW,CAACC,SAAS,GAAG,EAAb,EAAiBC,MAAM,GAAG,EAA1B,EAA8B;AACvC,UAAMR,OAAO,CAACS,OAAR,CAAgB,0BAAhB,CAAN,EAAmDF,SAAnD,EAA8DC,MAA9D;;AAEA,QAAIE,IAAI,GAAG,iCAAX;AACAb,IAAAA,UAAU,CAACc,aAAX,CAAyBZ,IAAI,CAACa,OAAL,CAAaF,IAAb,CAAzB;;AAEA,SAAKG,OAAL,CAAaH,IAAb;;AAED;;AAED,MAAII,iBAAJ,GAAwB;AACtB,WAAOlB,aAAa,CAACmB,KAAd;AACL,UAAMD,iBADD;AAEL,MAAE,0BAA0Bd,OAAO,CAACS,OAAR,CAAgB,gBAAhB,CAA5B,EAFK;AAGL,MAAE,2BAA2B,WAA7B,EAHK,CAAP;AAID;;AAEDO,EAAAA,QAAQ,GAAG;;AAET,WAAO,IAAIC,OAAJ,CAAaR,OAAD,IAAa;;AAE9B,UAAIS,MAAM,GAAG,IAAb;;AAEA,WAAKC,EAAL,CAAQ,MAAR,EAAgBD,MAAM,GAAIE,IAAD,IAAU;;AAEjC,aAAKC,GAAL,CAAS,MAAT,EAAiBH,MAAjB;AACAA,QAAAA,MAAM,GAAG,IAAT;;AAEAT,QAAAA,OAAO,CAACW,IAAD,CAAP;;AAED,OAPD;;AASD,KAbM,CAAP;;AAeD,GApCwC;;;;AAwC3C,SAASf,cAAT","sourcesContent":["import { Configuration } from '@virtualpatterns/mablung-configuration'\nimport { FileSystem } from '@virtualpatterns/mablung-file-system'\nimport { ForkedProcess } from '@virtualpatterns/mablung-worker'\nimport Path from 'path'\n\nconst Require = __require\n\nclass MigrateProcess extends ForkedProcess {\n\n  constructor(parameter = {}, option = {}) {\n    super(Require.resolve('../../command/migrate.js'), parameter, option)\n\n    let path = 'process/log/migrate-process.log'\n    FileSystem.ensureDirSync(Path.dirname(path))\n\n    this.writeTo(path)\n\n  }\n\n  get _defaultParameter() {\n    return Configuration.merge(\n      super._defaultParameter, \n      { '--migration-class-path': Require.resolve('./migration.js') },\n      { '--migration-export-name': 'Migration' })\n  }\n\n  whenExit() {\n\n    return new Promise((resolve) => {\n\n      let onExit = null\n\n      this.on('exit', onExit = (code) => {\n\n        this.off('exit', onExit)\n        onExit = null\n\n        resolve(code)\n\n      })\n  \n    })\n\n  }\n  \n}\n\nexport { MigrateProcess }"],"file":"migrate-process.js"}