{"version":3,"sources":["../../source/library/migration.js"],"names":[],"mappings":"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","file":"migration.js","sourcesContent":["import { FileSystem } from '@virtualpatterns/mablung-file-system'\nimport Luxon from 'luxon'\nimport Match from 'minimatch'\nimport Path from 'path'\nimport URL from 'url'\n\nconst { DateTime } = Luxon\nconst FilePath = __filePath\nconst FolderPath = Path.dirname(FilePath)\n\nclass Migration {\n\n  constructor(path) {\n    this._path = path\n    this._name = Path.basename(this._path, Path.extname(this._path))\n  }\n\n  /* c8 ignore next 3 */\n  get path() {\n    return this._path\n  }\n\n  /* c8 ignore next 3 */\n  get name() {\n    return this._name\n  }\n\n  async isInstalled() {\n    return   (await FileSystem.pathExists(`${Path.dirname(this._path)}/${this._name}.installed`)) && \n            !(await FileSystem.pathExists(`${Path.dirname(this._path)}/${this._name}.uninstalled`))\n  }\n\n  install() {\n    return Promise.all([\n      FileSystem.touch(`${Path.dirname(this._path)}/${this._name}.installed`),\n      FileSystem.remove(`${Path.dirname(this._path)}/${this._name}.uninstalled`)\n    ])\n  }\n\n  uninstall() {\n    return FileSystem.touch(`${Path.dirname(this._path)}/${this._name}.uninstalled`)\n  }\n\n  toString() {\n    return this._name\n  }\n\n  static async createMigration(name, path = Path.normalize(`${FolderPath}/../../source/library/migration`), templatePath = Path.normalize(`${FolderPath}/../../source/library/migration/template.js`)) {\n\n    let fromPath = templatePath\n\n    let toFolder = path\n    let toName = `${DateTime.utc().toFormat('yyyyLLddHHmmss')}-${name}`\n    let toExtension = Path.extname(templatePath)\n\n    let toPath = `${toFolder}/${toName}${toExtension}`\n\n    await FileSystem.mkdir(Path.dirname(toPath), { 'recursive': true })\n    await FileSystem.copy(fromPath, toPath)\n\n    return toPath\n\n  }\n\n  static getMigration(...parameter) {\n    return this.getMigrationFromPath(`${FolderPath}/migration`, [ '*.js' ], [ 'template.js' ], ...parameter)\n  }\n\n  static async getMigrationFromPath(path, includePattern, excludePattern, ...parameter) {\n\n    await FileSystem.ensureDir(path)\n    let item = await FileSystem.readdir(path, { 'encoding': 'utf-8', 'withFileTypes': true })\n\n    let getMigrationFromPathPromise = item\n      .filter((item) => item.isDirectory())\n      .map((directory) => this.getMigrationFromPath(`${path}/${directory.name}`, includePattern, excludePattern, ...parameter))\n\n    let importMigrationPromise = item\n      .filter((item) => item.isFile())\n      .filter((file) => includePattern.reduce((isMatch, pattern) => isMatch ? isMatch : Match(file.name, pattern), false))\n      .filter((file) => !excludePattern.reduce((isMatch, pattern) => isMatch ? isMatch : Match(file.name, pattern), false))\n      .map((file) => this.importMigration(`${path}/${file.name}`, ...parameter))\n\n    return (await Promise.all([...getMigrationFromPathPromise, ...importMigrationPromise])).flat().sort()\n\n  }\n\n  static async importMigration(path, ...parameter) {\n\n    let migration = null\n    migration = await import(URL.pathToFileURL(path))\n    migration = migration.default || migration\n\n    return new migration(path, ...parameter)\n    \n  }\n\n  static async installMigration(...parameter) {\n\n    for (let migration of (await this.getMigration(...parameter))) {\n\n      if (await migration.isInstalled()) {\n        // do nothing\n      } else {\n        await migration.install()\n      }\n\n    }\n\n  }\n\n  static async uninstallMigration(...parameter) {\n\n    for (let migration of (await this.getMigration(...parameter)).reverse()) {\n\n      if (await migration.isInstalled()) {\n        await migration.uninstall()\n      }\n\n    }\n\n  }\n\n}\n\nexport { Migration }\n"]}