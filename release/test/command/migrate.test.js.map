{"version":3,"sources":["../../../source/test/command/migrate.test.js"],"names":[],"mappings":"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","file":"migrate.test.js","sourcesContent":["import { FileSystem } from '@virtualpatterns/mablung-file-system'\nimport Match from 'minimatch'\nimport Path from 'path'\nimport Test from 'ava'\n\nimport { MigrateProcess } from './migrate-process.js'\nimport { Migration } from './migration.js'\n\nconst FilePath = __filePath\nconst FolderPath = Path.dirname(FilePath)\n\nTest.serial('migrate list', async (test) => {\n  let process = new MigrateProcess({ 'list': true })\n  test.is(await process.whenExit(), 0)\n})\n\nTest.serial('migrate create', async (test) => {\n\n  let name = 'migrate-create'\n\n  let process = new MigrateProcess({ 'create': name })\n  test.is(await process.whenExit(), 0)\n\n  let folderPath = `${FolderPath}/../../../source/test/command/migration`\n  let pattern = `*-${name}.js`\n\n  let item = await FileSystem.readdir(folderPath, { 'encoding': 'utf-8', 'withFileTypes': true })\n  let path = item\n    .filter((item) => item.isFile())\n    .filter((file) => Match(file.name, pattern))\n    .map((file) => `${folderPath}/${file.name}`)\n\n  test.is(path.length, 1)\n\n  await FileSystem.remove(path[0])\n\n})\n\nTest.serial('migrate install', async (test) => {\n\n  let process = new MigrateProcess({ 'install': true })\n  test.is(await process.whenExit(), 0)\n  \n  let migration = await Migration.getMigration()\n\n  test.is(migration.length, 1)\n  test.is(await migration[0].isInstalled(), true)\n\n})\n\nTest.serial('migrate uninstall', async (test) => {\n\n  let process = new MigrateProcess({ 'uninstall': true })\n  test.is(await process.whenExit(), 0)\n  \n  let migration = await Migration.getMigration()\n\n  test.is(migration.length, 1)\n  test.is(await migration[0].isInstalled(), false)\n\n})\n"]}