{"version":3,"sources":["../../../source/test/command/migrate-process.js"],"names":[],"mappings":"yDAAA,SAAS,aAAT,QAA8B,wCAA9B;AACA,SAAS,UAAT,QAA2B,sCAA3B;AACA,SAAS,aAAT,QAA8B,iCAA9B;AACA,OAAO,IAAP,MAAiB,MAAjB;;AAEA,MAAM,OAAO,GALb,cAAc,CAAC,MAAM,CAAC,IAAP,CAAY,GAAb,CAKd;;AAEA,MAAM,cAAN,SAA6B,aAA7B,CAA2C;;AAEzC,EAAA,WAAW,CAAC,SAAS,GAAG,EAAb,EAAiB,MAAM,GAAG,EAA1B,EAA8B;AACvC,UAAM,OAAO,CAAC,OAAR,CAAgB,0BAAhB,CAAN,EAAmD,SAAnD,EAA8D,MAA9D;;AAEA,QAAI,IAAI,GAAG,iCAAX;AACA,IAAA,UAAU,CAAC,aAAX,CAAyB,IAAI,CAAC,OAAL,CAAa,IAAb,CAAzB;;AAEA,SAAK,OAAL,CAAa,IAAb;;AAED;;AAEoB,MAAjB,iBAAiB,GAAG;AACtB,WAAO,aAAa,CAAC,KAAd;AACL,UAAM,iBADD;AAEL,MAAE,0BAA0B,OAAO,CAAC,OAAR,CAAgB,gBAAhB,CAA5B,EAFK;AAGL,MAAE,2BAA2B,WAA7B,EAHK,CAAP;AAID;;AAED,EAAA,QAAQ,GAAG;;AAET,WAAO,IAAI,OAAJ,CAAY,CAAC,OAAD,KAAa;;AAE9B,UAAI,MAAM,GAAG,IAAb;;AAEA,WAAK,EAAL,CAAQ,MAAR,EAAgB,MAAM,GAAG,CAAC,IAAD,KAAU;;AAEjC,aAAK,GAAL,CAAS,MAAT,EAAiB,MAAjB;AACA,QAAA,MAAM,GAAG,IAAT;;AAEA,QAAA,OAAO,CAAC,IAAD,CAAP;;AAED,OAPD;;AASD,KAbM,CAAP;;AAeD,GApCwC;;;;AAwC3C,SAAS,cAAT","file":"migrate-process.js","sourcesContent":["import { Configuration } from '@virtualpatterns/mablung-configuration'\nimport { FileSystem } from '@virtualpatterns/mablung-file-system'\nimport { ForkedProcess } from '@virtualpatterns/mablung-worker'\nimport Path from 'path'\n\nconst Require = __require\n\nclass MigrateProcess extends ForkedProcess {\n\n  constructor(parameter = {}, option = {}) {\n    super(Require.resolve('../../command/migrate.js'), parameter, option)\n\n    let path = 'process/log/migrate-process.log'\n    FileSystem.ensureDirSync(Path.dirname(path))\n\n    this.writeTo(path)\n\n  }\n\n  get _defaultParameter() {\n    return Configuration.merge(\n      super._defaultParameter, \n      { '--migration-class-path': Require.resolve('./migration.js') },\n      { '--migration-export-name': 'Migration' })\n  }\n\n  whenExit() {\n\n    return new Promise((resolve) => {\n\n      let onExit = null\n\n      this.on('exit', onExit = (code) => {\n\n        this.off('exit', onExit)\n        onExit = null\n\n        resolve(code)\n\n      })\n  \n    })\n\n  }\n  \n}\n\nexport { MigrateProcess }"]}